// <auto-generated />
using DAL.Concrete.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231121193215_mig_1")]
    partial class mig_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("Entities.Concrete.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClassId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Entities.Concrete.Day", b =>
                {
                    b.Property<int>("DayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DayId");

                    b.ToTable("Day");
                });

            modelBuilder.Entity("Entities.Concrete.DersProgram", b =>
                {
                    b.Property<int>("DersProgramId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DerslikId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LessonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DayId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IntervalId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Length")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalDay")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalHours")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalLessonInDay")
                        .HasColumnType("INTEGER");

                    b.HasKey("DersProgramId", "ClassId", "DerslikId", "LessonId", "TeacherId", "DayId", "IntervalId");

                    b.HasIndex("ClassId");

                    b.HasIndex("DayId");

                    b.HasIndex("DerslikId");

                    b.HasIndex("IntervalId");

                    b.HasIndex("LessonId");

                    b.HasIndex("TeacherId");

                    b.ToTable("DersPrograms");
                });

            modelBuilder.Entity("Entities.Concrete.Derslik", b =>
                {
                    b.Property<int>("DerslikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DerslikId");

                    b.ToTable("Derslikler");
                });

            modelBuilder.Entity("Entities.Concrete.Interval", b =>
                {
                    b.Property<int>("IntervalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IntervalOfday")
                        .HasColumnType("INTEGER");

                    b.HasKey("IntervalId");

                    b.ToTable("Interval");
                });

            modelBuilder.Entity("Entities.Concrete.Lesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LessonId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("Entities.Concrete.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TeacherColorHex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Entities.Concrete.DersProgram", b =>
                {
                    b.HasOne("Entities.Concrete.Class", "Class")
                        .WithMany("DersProgram")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Day", "Day")
                        .WithMany("DersProgram")
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Derslik", "Derslik")
                        .WithMany("DersProgram")
                        .HasForeignKey("DerslikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Interval", "Interval")
                        .WithMany("DersProgram")
                        .HasForeignKey("IntervalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Lesson", "Lesson")
                        .WithMany("DersProgram")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Teacher", "Teacher")
                        .WithMany("DersProgram")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Day");

                    b.Navigation("Derslik");

                    b.Navigation("Interval");

                    b.Navigation("Lesson");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Entities.Concrete.Class", b =>
                {
                    b.Navigation("DersProgram");
                });

            modelBuilder.Entity("Entities.Concrete.Day", b =>
                {
                    b.Navigation("DersProgram");
                });

            modelBuilder.Entity("Entities.Concrete.Derslik", b =>
                {
                    b.Navigation("DersProgram");
                });

            modelBuilder.Entity("Entities.Concrete.Interval", b =>
                {
                    b.Navigation("DersProgram");
                });

            modelBuilder.Entity("Entities.Concrete.Lesson", b =>
                {
                    b.Navigation("DersProgram");
                });

            modelBuilder.Entity("Entities.Concrete.Teacher", b =>
                {
                    b.Navigation("DersProgram");
                });
#pragma warning restore 612, 618
        }
    }
}
